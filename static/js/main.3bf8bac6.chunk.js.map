{"version":3,"sources":["Nav.js","pages/Inicio.js","pages/Galeria.js","App.js","serviceWorker.js","index.js"],"names":["Nav","id","className","to","activeClassName","Inicio","href","Galeria","useState","images","setImages","page","setPage","useEffect","fetch","process","then","res","json","data","dataLength","length","next","hasMore","loader","map","image","index","key","links","html","target","rel","src","urls","regular","alt","alt_description","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iQAeeA,MAZf,WACE,OACE,yBAAKC,GAAG,UACN,wBAAIC,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAgB,aACrC,qFCNK,SAASC,IACtB,OACE,yBAAKH,UAAU,aACb,0BAAMA,UAAU,SACd,wBAAIA,UAAU,UAAd,+BACA,wBAAIA,UAAU,YAAd,mCACA,wBAAIA,UAAU,UAAd,+BAEF,6BAASA,UAAU,aACjB,yBAAKA,UAAU,QACb,wBAAIA,UAAU,YAAd,mCACA,wBAAIA,UAAU,UAAd,mBAEF,yBAAKA,UAAU,QACb,uBAAGA,UAAU,YAAb,oUAOA,uBAAGA,UAAU,YAAb,ycAWJ,4BAAQA,UAAU,SAChB,wBAAIA,UAAU,UAAd,8BACA,wBAAIA,UAAU,YAAd,+EAIA,wBAAIA,UAAU,WAAd,kBAEF,yBAAKA,UAAU,aACb,wBAAIA,UAAU,YAAd,0BACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,cACA,uBAAGA,UAAU,YAAb,gLAOJ,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,gBACA,uBAAGA,UAAU,YAAb,gLAOJ,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,iBACA,uBAAGA,UAAU,YAAb,gLAOJ,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,UAAd,cACA,uBAAGA,UAAU,YAAb,kLASR,4BAAQA,UAAU,UAChB,kDACsB,IACpB,uBAAGA,UAAU,SAASI,KAAK,iCAA3B,6B,4BCrFK,SAASC,IAAW,IAAD,EACJC,mBAAS,IADL,mBACzBC,EADyB,KACjBC,EADiB,OAERF,mBAAS,GAFD,mBAEzBG,EAFyB,KAEnBC,EAFmB,KAehC,OAXAC,qBAAU,WAKRC,MAAM,6CAAD,OAXSC,8CAWT,iBAAgEJ,IAClEK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLT,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,YAA2BU,YANxC,CAACR,IAUF,oCACE,kBAAC,IAAD,CACES,WAAYX,EAAOY,OACnBC,KAAM,WACJV,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAE3BY,SAAS,EACTC,OAAQ,4CAER,yBAAKtB,UAAU,cACZO,EAAOgB,KAAI,SAACC,EAAOC,GAAR,OACV,uBACEzB,UAAU,QACV0B,IAAKD,EACLrB,KAAMoB,EAAMG,MAAMC,KAClBC,OAAO,SACPC,IAAI,uBAEJ,yBAAKC,IAAKP,EAAMQ,KAAKC,QAASC,IAAKV,EAAMW,yB,MCnBxCC,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWpC,IACxC,kBAAC,IAAD,CAAOkC,KAAK,WAAWE,UAAWlC,OCFtBmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3bf8bac6.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav id=\"navbar\">\n      <ul className=\"nav-links\">\n        <NavLink to=\"/Galeria\" activeClassName=\"is-active\">\n          <li>Checa la galería de nuestros alumnos egresados</li>\n        </NavLink>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nexport default function Inicio() {\n  return (\n    <div className=\"container\">\n      <main className=\"jumbo\">\n        <h3 className=\"j-sub1\">Academia fotográfica lux</h3>\n        <h1 className=\"j-titulo\">Fundamentos de la Fotografía</h1>\n        <h4 className=\"j-sub2\">Guía para principiantes</h4>\n      </main>\n      <section className=\"section-a\">\n        <div className=\"faq1\">\n          <h2 className=\"titulo-a\">¿Qué es la fotografía?</h2>\n          <h4 className=\"subt-a\">Breve historia</h4>\n        </div>\n        <div className=\"faq2\">\n          <p className=\"paraph-a\">\n            Las presentaciones son herramientas de comunicación que pueden\n            usarse en demostraciones, conferencias, discursos, informes, etc. Se\n            presenta principalmente ante un público y sirven para una gran\n            variedad de propósitos, lo que convierte a las presentaciones en\n            herramientas útiles para convencer y enseñar.\n          </p>\n          <p className=\"paraph-a\">\n            Las presentaciones son herramientas de comunicación que pueden\n            usarse en demostraciones, conferencias, discursos, informes, etc. Se\n            presenta principalmente ante un público y sirven para una gran\n            variedad de propósitos, lo que convierte a las presentaciones en\n            herramientas útiles para convencer y enseñar.Las presentaciones son\n            herramientas de comunicación que pueden usarse en demostraciones,\n            conferencias, discursos, informes, etc.\n          </p>\n        </div>\n      </section>\n      <figure className=\"quote\">\n        <h3 className=\"subt-q\">Una toma de inspiración</h3>\n        <h2 className=\"q-titulo\">\n          \"La fotografía es la historia que no consigo expresar con las\n          palabras.\"\n        </h2>\n        <h4 className=\"subt-q1\">Destin Sparks</h4>\n      </figure>\n      <div className=\"section-b\">\n        <h2 className=\"titulo-a\">Tipos de fotografía</h2>\n        <div className=\"grid-b\">\n          <div className=\"tipo\">\n            <div className=\"desc-b\">\n              <h3 className=\"subt-q\">1. Retrato</h3>\n              <p className=\"paraph-a\">\n                Las presentaciones son herramientas de comunicación que pueden\n                usarse en demostraciones, conferencias, discursos, informes,\n                etc. Se suelen presentar ante un público\n              </p>\n            </div>\n          </div>\n          <div className=\"tipo\">\n            <div className=\"desc-b\">\n              <h3 className=\"subt-q\">2. Comercial</h3>\n              <p className=\"paraph-a\">\n                Las presentaciones son herramientas de comunicación que pueden\n                usarse en demostraciones, conferencias, discursos, informes,\n                etc. Se suelen presentar ante un público\n              </p>\n            </div>\n          </div>\n          <div className=\"tipo\">\n            <div className=\"desc-b\">\n              <h3 className=\"subt-q\">3. Naturaleza</h3>\n              <p className=\"paraph-a\">\n                Las presentaciones son herramientas de comunicación que pueden\n                usarse en demostraciones, conferencias, discursos, informes,\n                etc. Se suelen presentar ante un público\n              </p>\n            </div>\n          </div>\n          <div className=\"tipo\">\n            <div className=\"desc-b\">\n              <h3 className=\"subt-q\">4. Paisaje</h3>\n              <p className=\"paraph-a\">\n                Las presentaciones son herramientas de comunicación que pueden\n                usarse en demostraciones, conferencias, discursos, informes,\n                etc. Se suelen presentar ante un público\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer className=\"footer\">\n        <h4>\n          Designed & coded by{\" \"}\n          <a className=\"f-link\" href=\"mailto:contactochka@gmail.com\">\n            contactochka@gmail.com\n          </a>\n        </h4>\n      </footer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst acccesKey = process.env.REACT_APP_UNSPLASH_ACCES_KEY;\n\nexport default function Galeria() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    getPhotos();\n  }, [page]);\n\n  function getPhotos() {\n    fetch(`https://api.unsplash.com/photos?client_id=${acccesKey}&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setImages((images) => [...images, ...data]);\n      });\n  }\n  return (\n    <>\n      <InfiniteScroll\n        dataLength={images.length} //This is important field to render the next data\n        next={() => {\n          setPage((page) => page + 1);\n        }}\n        hasMore={true}\n        loader={<h4>Cargando...</h4>}\n      >\n        <div className=\"image-grid\">\n          {images.map((image, index) => (\n            <a\n              className=\"image\"\n              key={index}\n              href={image.links.html}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={image.urls.regular} alt={image.alt_description} />\n            </a>\n          ))}\n        </div>\n      </InfiniteScroll>\n    </>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Nav from \"./Nav\";\nimport Inicio from \"./pages/Inicio\";\nimport Galeria from \"./pages/Galeria\";\nimport \"./Lux.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route path=\"/\" exact={true} component={Inicio} />\n        <Route path=\"/galeria\" component={Galeria} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}